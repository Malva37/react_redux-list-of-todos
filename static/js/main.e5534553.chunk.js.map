{"version":3,"sources":["types/Status.ts","features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","utils/filterTodos.ts","index.tsx"],"names":["Status","actions","todo","type","payload","currentTodoReducer","state","action","initialState","query","status","ALL","filterBy","filterReducer","todos","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoList","dispatch","length","className","map","id","completed","cn","title","onClick","currentTodoActions","setCurrentTodo","TodoFilter","value","onChange","event","statusFromView","target","filterActions","ACTIVE","COMPLETED","placeholder","queryFromView","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","useState","hasLoadingError","setLoadingError","currentUser","setCurrentUser","getUserFromServer","a","userFromServer","useEffect","userId","href","name","App","getTodosFromServer","todosFromServer","visibleTodos","useMemo","preparedTodos","filteredTodos","prepareQuery","toLowerCase","includes","prepareTodos","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e5534553.chunk.js","sourcesContent":["export enum Status {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n    case 'currentTodo/REMOVE':\n      return null;\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\ntype FilterAllAction = {\n  type: 'filter/ALL',\n  payload: {\n    status: Status,\n    query: string,\n  },\n};\n\ntype FilterActiveAction = {\n  type: 'filter/ACTIVE',\n  payload: {\n    status: Status,\n    query: string,\n  },\n};\n\ntype FilterCompletedAction = {\n  type: 'filter/COMPLETED',\n  payload: {\n    status: Status,\n    query: string,\n  },\n};\n\nconst filterAll = (filterBy: Status, query: string): FilterAllAction => ({\n  type: 'filter/ALL',\n  payload: {\n    status: filterBy,\n    query,\n  },\n});\n\nconst filterActive = (filterBy: Status, query: string): FilterActiveAction => ({\n  type: 'filter/ACTIVE',\n  payload: {\n    status: filterBy,\n    query,\n  },\n});\n\nconst filterCompleted = (\n  filterBy: Status,\n  query: string,\n): FilterCompletedAction => ({\n  type: 'filter/COMPLETED',\n  payload: {\n    status: filterBy,\n    query,\n  },\n});\n\ntype State = {\n  query: string;\n  status: Status;\n};\n\nconst initialState: State = {\n  query: '',\n  status: Status.ALL,\n};\n\ntype Action = FilterAllAction | FilterActiveAction | FilterCompletedAction;\n\nconst filterReducer = (state: State = initialState, action: Action) => {\n  switch (action.type) {\n    case 'filter/ALL':\n      return {\n        query: action.payload.query,\n        status: action.payload.status,\n      };\n    case 'filter/ACTIVE':\n      return {\n        query: action.payload.query,\n        status: action.payload.status,\n      };\n    case 'filter/COMPLETED':\n      return {\n        query: action.payload.query,\n        status: action.payload.status,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const actions = { filterAll, filterActive, filterCompleted };\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetTodosAction = {\n  type: 'todos/SET';\n  payload: Todo[];\n};\n\nconst setTodos = (todos: Todo[]): SetTodosAction => ({\n  type: 'todos/SET',\n  payload: todos,\n});\n\ntype State = Todo[] | [];\ntype Action = SetTodosAction;\n\nconst todosReducer = (state: State = [], action: Action): State => {\n  switch (action.type) {\n    case 'todos/SET':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport const actions = { setTodos };\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nexport const rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable max-len */\nimport cn from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\n\ntype Props = {\n  todos: Todo[] | null;\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  const dispatch = useAppDispatch();\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const setCurrentTodo = (todo: Todo) => dispatch(currentTodoActions.setTodo(todo));\n  const removeCurrentTodo = () => dispatch(currentTodoActions.removeTodo());\n\n  return (\n    <>\n      {!todos?.length\n        ? (\n          <p className=\"notification is-warning\">\n            There are no todos matching current filter criteria\n          </p>\n        )\n        : (\n          <table className=\"table is-narrow is-fullwidth\">\n            <thead>\n              <tr>\n                <th>#</th>\n\n                <th>\n                  <span className=\"icon\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </th>\n\n                <th>Title</th>\n                <th> </th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {todos.map(todo => (\n                <tr data-cy=\"todo\" key={todo.id}>\n                  <td className=\"is-vcentered\">{todo.id}</td>\n                  <td className=\"is-vcentered\">\n                    {todo.completed && (\n                      <span className=\"icon\" data-cy=\"iconCompleted\"><i className=\"fas fa-check\" /></span>\n                    )}\n                  </td>\n\n                  <td className=\"is-vcentered is-expanded\">\n                    <p className={cn(\n                      {\n                        'has-text-danger': !todo.completed,\n                        'has-text-success': todo.completed,\n                      },\n                    )}\n                    >\n                      {todo.title}\n                    </p>\n                  </td>\n\n                  <td className=\"has-text-right is-vcentered\">\n                    {currentTodo?.id === todo.id\n                      ? (\n                        <button\n                          data-cy=\"selectButton\"\n                          className=\"button\"\n                          type=\"button\"\n                          onClick={() => removeCurrentTodo()}\n                        >\n                          <span className=\"icon\">\n                            <i className=\"far fa-eye-slash\" />\n                          </span>\n                        </button>\n                      )\n                      : (\n                        <button\n                          data-cy=\"selectButton\"\n                          className=\"button\"\n                          type=\"button\"\n                          onClick={() => setCurrentTodo(todo)}\n                        >\n                          <span className=\"icon\">\n                            <i className=\"far fa-eye\" />\n                          </span>\n                        </button>\n                      )}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n    </>\n  );\n};\n","import React, { ChangeEvent } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as filterActions } from '../../features/filter';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const { query, status } = useAppSelector(state => state.filter);\n\n  const handleChangeStatus = (event: ChangeEvent<HTMLSelectElement>) => {\n    const statusFromView = event.target.value as Status;\n\n    switch (statusFromView) {\n      case 'all':\n        return dispatch(filterActions.filterAll(statusFromView, query));\n\n      case 'active':\n        return dispatch(filterActions.filterActive(statusFromView, query));\n\n      case 'completed':\n        return dispatch(filterActions.filterCompleted(statusFromView, query));\n\n      default:\n        return dispatch(filterActions.filterAll(statusFromView, query));\n    }\n  };\n\n  const handleChangeQuery = (event: ChangeEvent<HTMLInputElement>) => {\n    const queryFromView = event.target.value;\n\n    switch (status) {\n      case 'all':\n        return dispatch(filterActions.filterAll(Status.ALL, queryFromView));\n      case 'active':\n        return dispatch(filterActions\n          .filterActive(Status.ACTIVE, queryFromView));\n      case 'completed':\n        return dispatch(filterActions\n          .filterCompleted(Status.COMPLETED, queryFromView));\n      default:\n        return dispatch(filterActions.filterAll(Status.ALL, query));\n    }\n  };\n\n  const resetQuery = () => {\n    return dispatch(filterActions.filterAll(status, ''));\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={handleChangeStatus}\n          >\n            <option value={Status.ALL}>All</option>\n            <option value={Status.ACTIVE}>Active</option>\n            <option value={Status.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={handleChangeQuery}\n          value={query}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={resetQuery}\n            />\n          </span>\n        )}\n\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\nexport const TodoModal: React.FC = () => {\n  const [hasLoadingError, setLoadingError] = useState(false);\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const dispatch = useAppDispatch();\n  const removeCurrentTodo = () => dispatch(currentTodoActions.removeTodo());\n\n  const getUserFromServer = async (id: number) => {\n    setLoadingError(true);\n    try {\n      const userFromServer = await getUser(id);\n\n      setCurrentUser(userFromServer);\n      setLoadingError(false);\n    } catch (error) {\n      setLoadingError(true);\n    }\n  };\n\n  useEffect(() => {\n    if (currentTodo) {\n      getUserFromServer(currentTodo.userId);\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {hasLoadingError ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {currentTodo?.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                removeCurrentTodo();\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {currentTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {currentTodo?.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n              {' by '}\n              <a href=\"mailto:Sincere@april.biz\">{currentUser?.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { prepareTodos } from './utils/filterTodos';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { actions } from './features/todos';\n\nexport const App: React.FC = () => {\n  const [hasLoadingError, setLoadingError] = useState(false);\n  const dispatch = useAppDispatch();\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const todos = useAppSelector(state => state.todos);\n  const { query, status } = useAppSelector(state => state.filter);\n  // let todos: Todo[] = [];\n\n  const getTodosFromServer = async () => {\n    setLoadingError(true);\n    try {\n      const todosFromServer = await getTodos();\n\n      dispatch(actions.setTodos(todosFromServer));\n      setLoadingError(false);\n    } catch (error) {\n      setLoadingError(true);\n    } finally {\n      setLoadingError(false);\n    }\n  };\n\n  useEffect(() => {\n    getTodosFromServer();\n  }, []);\n\n  const visibleTodos = useMemo(() => {\n    return prepareTodos(query, status, todos);\n  }, [query, status, todos]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {!hasLoadingError\n                ? <TodoList todos={visibleTodos} />\n                : <Loader />}\n            </div>\n          </div>\n        </div>\n      </div>\n      {currentTodo && <TodoModal />}\n\n      {/* <TodoModal /> */}\n    </>\n  );\n};\n","import { Status } from '../types/Status';\nimport { Todo } from '../types/Todo';\n\nexport const prepareTodos = (\n  query: string,\n  status: Status,\n  preparedTodos: Todo[],\n) => {\n  let filteredTodos;\n\n  switch (status) {\n    case Status.ACTIVE:\n      filteredTodos = preparedTodos.filter(todo => !todo.completed);\n      break;\n    case Status.COMPLETED:\n      filteredTodos = preparedTodos.filter(todo => todo.completed);\n      break;\n    case Status.ALL:\n    default:\n      filteredTodos = preparedTodos;\n      break;\n  }\n\n  if (query) {\n    const prepareQuery = query.toLowerCase();\n\n    filteredTodos = filteredTodos.filter(todo => todo.title.toLowerCase()\n      .includes(prepareQuery));\n  }\n\n  return filteredTodos;\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}